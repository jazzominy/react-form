var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},FormTextIp=React.createClass({displayName:"FormTextIp",getInitialState:function(){return{value:""}},componentWillMount:function(){this.setState({value:this.props.value})},handleChange:function(event){this.setState({value:event.target.value})},render:function(){return React.createElement("div",{className:"form-group"},React.createElement("label",{className:"col-sm-3 control-label",htmlFor:this.props.id},this.props.label),React.createElement("div",{className:"col-sm-9"},React.createElement("input",{id:this.props.id,name:this.props.name,className:"form-control",type:"text",value:this.state.value,onChange:this.handleChange})))}}),FormTextArea=React.createClass({displayName:"FormTextArea",getInitialState:function(){return{value:""}},componentWillMount:function(){this.setState({value:this.props.value})},handleChange:function(event){this.setState({value:event.target.value})},render:function(){return React.createElement("div",{className:"form-group"},React.createElement("label",{className:"col-sm-3 control-label",htmlFor:this.props.id},this.props.label),React.createElement("div",{className:"col-sm-9"},React.createElement("textarea",{id:this.props.id,name:this.props.name,className:"form-control",type:"text",value:this.state.value,onChange:this.handleChange})))}}),FormDropdown=React.createClass({displayName:"FormDropdown",getInitialState:function(){return{value:""}},componentWillMount:function(){this.setState({value:this.props.selected})},handleChange:function(event){this.setState({value:event.target.value})},render:function(){var options=[];return this.props.options&&this.props.options.length&&this.props.options.forEach(function(item,index,arr){options.push(React.createElement("option",{value:item.value,key:index},item.label))}),React.createElement("div",{className:"form-group"},React.createElement("label",{className:"col-sm-3 control-label",htmlFor:this.props.id},this.props.label),React.createElement("div",{className:"col-sm-9"},React.createElement("select",{id:this.props.id,name:this.props.name,className:"form-control",value:this.state.value,onChange:this.handleChange},options)))}}),FormCheckbox=React.createClass({displayName:"FormCheckbox",render:function(){var style={paddingLeft:"0px"},checkboxes=[];return this.props.values&&this.props.values.length&&this.props.values.forEach(function(item,index,arr){var checked=item.checked===!0;checkboxes.push(React.createElement("div",{className:"checkbox checkbox-inline",key:index,style:style},React.createElement("label",null,React.createElement("input",{type:"checkbox",value:item.value,defaultChecked:checked}),item.label)))}),React.createElement("div",{className:"form-group"},React.createElement("label",{className:"col-sm-3 control-label"},this.props.label),React.createElement("div",{className:"col-sm-9"},checkboxes))}}),FormRadio=React.createClass({displayName:"FormRadio",render:function(){var radios=[],props=this.props;return this.props.values&&this.props.values.length&&this.props.values.forEach(function(item,index,arr){var checked=props.selectedValue===item.value;radios.push(React.createElement("label",{className:"radio-inline",key:index},React.createElement("input",{type:"radio",name:"options",value:item.value,defaultChecked:checked}),item.label))}),React.createElement("div",{className:"form-group"},React.createElement("label",{className:"col-sm-3 control-label"},this.props.label),React.createElement("div",{className:"col-sm-9"},radios))}}),FormSubmitButton=React.createClass({displayName:"FormSubmitButton",render:function(){return React.createElement("div",{className:"form-group"},React.createElement("div",{className:"col-sm-9 col-sm-offset-3"},React.createElement("button",{className:"btn btn-primary",type:"submit"},this.props.value)))}}),Form=React.createClass({displayName:"Form",componentWillMount:function(){this.setState({value:this.props.value})},onSubmit:function(event){this.props.config&&"function"==typeof this.props.config.onSubmit&&(event.preventDefault(),this.props.config.onSubmit())},render:function(){var id=this.props.config.id,name=this.props.config.name,action=this.props.config.action,config=this.props.config,fields=config.fields,formFields=fields.map(function(item,index,arr){var props={id:item.id,name:item.name,label:item.label,value:item.value,type:item.type,key:index},formItem=React.createElement(FormTextIp,props);return"select"==item.type?formItem=React.createElement(FormDropdown,_extends({},props,{options:item.options,selected:item.selected})):"radio"==item.type?formItem=React.createElement(FormRadio,_extends({},props,{values:item.values,selectedValue:item.selectedValue})):"checkbox"==item.type?formItem=React.createElement(FormCheckbox,_extends({},props,{values:item.values})):"submit"==item.type&&(formItem=React.createElement(FormSubmitButton,props)),formItem});return React.createElement("form",{id:id,name:name,className:"form-horizontal",onSubmit:this.onSubmit,method:"post",action:action,autoComplete:"off"},formFields)}});window.ReactForm=Form;
